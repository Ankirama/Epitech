digraph "GTC Extensions (Stable)"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir=LR;
  Node8 [label="GLM_GTC_noise",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__noise.html"];
  Node0 [label="GTC Extensions (Stable)",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node11 [label="GLM_GTC_reciprocal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__reciprocal.html",tooltip="Define secant, cosecant and cotangent functions. "];
  Node2 [label="GLM_GTC_epsilon",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__epsilon.html",tooltip="Comparison functions for a user defined epsilon values. "];
  Node10 [label="GLM_GTC_random",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__random.html",tooltip="Generate random number from various distribution methods. "];
  Node6 [label="GLM_GTC_matrix_inverse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__inverse.html"];
  Node15 [label="GLM_GTC_ulp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__ulp.html",tooltip="Allow the measurement of the accuracy of a function against a reference implementation. This extension works on floating-point data and provide results in ULP. <glm/gtc/ulp.hpp> need to be included to use these features. "];
  Node5 [label="GLM_GTC_matrix_integer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__integer.html"];
  Node1 [label="GLM_GTC_constants",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__constants.html",tooltip="Allow to perform bit operations on integer values. "];
  Node14 [label="GLM_GTC_type_ptr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__type__ptr.html",tooltip="Handles the interaction between pointers and vector, matrix types. "];
  Node7 [label="GLM_GTC_matrix_transform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__transform.html",tooltip="Defines functions that generate common transformation matrices. "];
  Node4 [label="GLM_GTC_matrix_access",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__access.html"];
  Node9 [label="GLM_GTC_quaternion",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__quaternion.html",tooltip="Defines a templated quaternion type and several quaternion operations. "];
  Node3 [label="GLM_GTC_half_float",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__half__float.html"];
  Node12 [label="GLM_GTC_swizzle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__swizzle.html",tooltip="Provide functions to emulate GLSL swizzle operator fonctionalities. "];
  Node13 [label="GLM_GTC_type_precision",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__type__precision.html",tooltip="Defines specific C++-based precision types. "];
  Node0->Node1 [shape=plaintext, dir="back", style="solid"];
  Node0->Node2 [shape=plaintext, dir="back", style="solid"];
  Node0->Node3 [shape=plaintext, dir="back", style="solid"];
  Node0->Node4 [shape=plaintext, dir="back", style="solid"];
  Node0->Node5 [shape=plaintext, dir="back", style="solid"];
  Node0->Node6 [shape=plaintext, dir="back", style="solid"];
  Node0->Node7 [shape=plaintext, dir="back", style="solid"];
  Node0->Node8 [shape=plaintext, dir="back", style="solid"];
  Node0->Node9 [shape=plaintext, dir="back", style="solid"];
  Node0->Node10 [shape=plaintext, dir="back", style="solid"];
  Node0->Node11 [shape=plaintext, dir="back", style="solid"];
  Node0->Node12 [shape=plaintext, dir="back", style="solid"];
  Node0->Node13 [shape=plaintext, dir="back", style="solid"];
  Node0->Node14 [shape=plaintext, dir="back", style="solid"];
  Node0->Node15 [shape=plaintext, dir="back", style="solid"];
}
