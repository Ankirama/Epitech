digraph "GTX Extensions (Experimental)"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir=LR;
  Node23 [label="GLM_GTX_matrix_interpolation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__matrix__interpolation.html",tooltip="Allows to directly interpolate two exiciting matrices. "];
  Node24 [label="GLM_GTX_matrix_major\l_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__matrix__major__storage.html",tooltip="Build matrices with specific matrix order, row or column. "];
  Node5 [label="GLM_GTX_color_space",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__color__space.html",tooltip="Related to RGB to HSV conversions and operations. "];
  Node37 [label="GLM_GTX_polar_coordinates",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__polar__coordinates.html",tooltip="Conversion from Euclidean space to polar space and revert. "];
  Node0 [label="GTX Extensions (Experimental)",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node30 [label="GLM_GTX_normal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__normal.html",tooltip="Compute the normal of a triangle. "];
  Node49 [label="GLM_GTX_vec1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__vec1.html",tooltip="Add vec1, ivec1, uvec1 and bvec1 types. <glm/gtx/vec1.hpp> need to be included to use these functiona..."];
  Node42 [label="GLM_GTX_simd_mat4",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__simd__mat4.html",tooltip="SIMD implementation of mat4 type. "];
  Node20 [label="GLM_GTX_intersect",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__intersect.html",tooltip="Add intersection functions. "];
  Node3 [label="GLM_GTX_closest_point",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__closest__point.html",tooltip="Find the point on a straight line which is the closet of a point. "];
  Node27 [label="GLM_GTX_mixed_producte",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__mixed__product.html",tooltip="Mixed product of 3 vectors. "];
  Node15 [label="GLM_GTX_gradient_paint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__gradient__paint.html",tooltip="Functions that return the color of procedural gradient for specific coordinates. <glm/gtx/gradient_pa..."];
  Node19 [label="GLM_GTX_integer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__integer.html",tooltip="Add support for integer for core functions. "];
  Node2 [label="GLM_GTX_bit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__bit.html",tooltip="Allow to perform bit operations on integer values. "];
  Node46 [label="GLM_GTX_string_cast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__string__cast.html",tooltip="Setup strings for GLM type values. "];
  Node11 [label="GLM_GTX_extented_min_max",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__extented__min__max.html"];
  Node29 [label="GLM_GTX_norm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__norm.html",tooltip="Various ways to compute vector norms. "];
  Node45 [label="GLM_GTX_std_based_type",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__std__based__type.html",tooltip="Adds vector types based on STL value types. <glm/gtx/std_based_type.hpp> need to be included to use t..."];
  Node32 [label="GLM_GTX_number_precision",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__number__precision.html",tooltip="Defined size types. "];
  Node50 [label="GLM_GTX_vector_access",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__vector__access.html",tooltip="Function to set values to vectors. "];
  Node47 [label="GLM_GTX_transform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__transform.html",tooltip="Add transformation matrices. "];
  Node22 [label="GLM_GTX_matrix_cross\l_product",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__matrix__cross__product.html",tooltip="Build cross product matrices. "];
  Node54 [label="GLM_GTX_wrap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__wrap.html",tooltip="Wrapping mode of texture coordinates. "];
  Node53 [label="GLM_GTX_verbose_operator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__verbose__operator.html",tooltip="Use words to replace operators. "];
  Node52 [label="GLM_GTX_vector_query",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__vector__query.html",tooltip="Query informations of vector types. "];
  Node25 [label="GLM_GTX_matrix_operation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__matrix__operation.html",tooltip="Build diagonal matrices from vectors. "];
  Node26 [label="GLM_GTX_matrix_query",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__matrix__query.html",tooltip="Query to evaluate matrix properties. "];
  Node8 [label="GLM_GTX_component_wise",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__component__wise.html",tooltip="Operations between components of a type. "];
  Node17 [label="GLM_GTX_inertia",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__inertia.html",tooltip="Create inertia matrices. "];
  Node13 [label="GLM_GTX_fast_square_root",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__fast__square__root.html",tooltip="Fast but less accurate implementations of square root based functions. "];
  Node9 [label="GLM_GTX_euler_angles",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__euler__angles.html",tooltip="Build matrices from Euler angles. "];
  Node48 [label="GLM_GTX_transform2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__transform2.html",tooltip="Add extra transformation matrices. "];
  Node6 [label="GLM_GTX_color_space\l_YCoCg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__color__space___y_co_cg.html",tooltip="RGB to YCoCg conversions and operations. "];
  Node10 [label="GLM_GTX_extend",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__extend.html",tooltip="Extend a position from a source to a position at a defined length. "];
  Node44 [label="GLM_GTX_spline",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__spline.html",tooltip="Spline functions. "];
  Node40 [label="GLM_GTX_raw_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__raw__data.html",tooltip="Projection of a vector to other one. "];
  Node12 [label="GLM_GTX_fast_exponential",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__fast__exponential.html",tooltip="Fast but less accurate implementations of exponential based functions. "];
  Node21 [label="GLM_GTX_log_base",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__log__base.html",tooltip="Logarithm for any base. base can be a vector or a scalar. "];
  Node7 [label="GLM_GTX_compatibility",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__compatibility.html",tooltip="Provide functions to increase the compatibility with Cg and HLSL languages. "];
  Node1 [label="GLM_GTX_associated\l_min_max",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__associated__min__max.html",tooltip="Min and max functions that return associated values not the compared onces. <glm/gtx/associated_min_m..."];
  Node34 [label="GLM_GTX_optimum_pow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__optimum__pow.html",tooltip="Integer exponentiation of power functions. "];
  Node16 [label="GLM_GTX_handed_coordinate\l_space",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__handed__coordinate__space.html",tooltip="To know if a set of three basis vectors defines a right or left-handed coordinate system..."];
  Node31 [label="GLM_GTX_normalize_dot",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__normalize__dot.html",tooltip="Dot product of vectors that need to be normalize with a single square root. "];
  Node33 [label="GLM_GTX_ocl_type",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__ocl__type.html",tooltip="OpenCL types. "];
  Node39 [label="GLM_GTX_quaternion",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__quaternion.html",tooltip="Extented quaternion types and functions. "];
  Node51 [label="GLM_GTX_vector_angle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__vector__angle.html",tooltip="Compute angle between vectors. "];
  Node36 [label="GLM_GTX_perpendicular",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__perpendicular.html",tooltip="Perpendicular of a vector from other one. "];
  Node18 [label="GLM_GTX_int_10_10_10_2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__int__10__10__10__2.html",tooltip="Pack vector to 1010102 integers. Storage only. "];
  Node35 [label="GLM_GTX_orthonormalize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__orthonormalize.html",tooltip="Orthonormalize matrices. "];
  Node28 [label="GLM_GTX_multiple",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__multiple.html",tooltip="Find the closest number of a number multiple of other number. "];
  Node4 [label="GLM_GTX_color_cast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__color__cast.html",tooltip="Conversion between two color types. "];
  Node43 [label="GLM_GTX_simd_vec4",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__simd__vec4.html",tooltip="SIMD implementation of vec4 type. "];
  Node38 [label="GLM_GTX_projection",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__projection.html",tooltip="Projection of a vector to other one. "];
  Node14 [label="GLM_GTX_fast_trigonometry",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__fast__trigonometry.html",tooltip="Fast but less accurate implementations of trigonometric functions. "];
  Node41 [label="GLM_GTX_rotate_vector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtx__rotate__vector.html",tooltip="Function to directly rotate a vector. "];
  Node0->Node1 [shape=plaintext, dir="back", style="solid"];
  Node0->Node2 [shape=plaintext, dir="back", style="solid"];
  Node0->Node3 [shape=plaintext, dir="back", style="solid"];
  Node0->Node4 [shape=plaintext, dir="back", style="solid"];
  Node0->Node5 [shape=plaintext, dir="back", style="solid"];
  Node0->Node6 [shape=plaintext, dir="back", style="solid"];
  Node0->Node7 [shape=plaintext, dir="back", style="solid"];
  Node0->Node8 [shape=plaintext, dir="back", style="solid"];
  Node0->Node9 [shape=plaintext, dir="back", style="solid"];
  Node0->Node10 [shape=plaintext, dir="back", style="solid"];
  Node0->Node11 [shape=plaintext, dir="back", style="solid"];
  Node0->Node12 [shape=plaintext, dir="back", style="solid"];
  Node0->Node13 [shape=plaintext, dir="back", style="solid"];
  Node0->Node14 [shape=plaintext, dir="back", style="solid"];
  Node0->Node15 [shape=plaintext, dir="back", style="solid"];
  Node0->Node16 [shape=plaintext, dir="back", style="solid"];
  Node0->Node17 [shape=plaintext, dir="back", style="solid"];
  Node0->Node18 [shape=plaintext, dir="back", style="solid"];
  Node0->Node19 [shape=plaintext, dir="back", style="solid"];
  Node0->Node20 [shape=plaintext, dir="back", style="solid"];
  Node0->Node21 [shape=plaintext, dir="back", style="solid"];
  Node0->Node22 [shape=plaintext, dir="back", style="solid"];
  Node0->Node23 [shape=plaintext, dir="back", style="solid"];
  Node0->Node24 [shape=plaintext, dir="back", style="solid"];
  Node0->Node25 [shape=plaintext, dir="back", style="solid"];
  Node0->Node26 [shape=plaintext, dir="back", style="solid"];
  Node0->Node27 [shape=plaintext, dir="back", style="solid"];
  Node0->Node28 [shape=plaintext, dir="back", style="solid"];
  Node0->Node29 [shape=plaintext, dir="back", style="solid"];
  Node0->Node30 [shape=plaintext, dir="back", style="solid"];
  Node0->Node31 [shape=plaintext, dir="back", style="solid"];
  Node0->Node32 [shape=plaintext, dir="back", style="solid"];
  Node0->Node33 [shape=plaintext, dir="back", style="solid"];
  Node0->Node34 [shape=plaintext, dir="back", style="solid"];
  Node0->Node35 [shape=plaintext, dir="back", style="solid"];
  Node0->Node36 [shape=plaintext, dir="back", style="solid"];
  Node0->Node37 [shape=plaintext, dir="back", style="solid"];
  Node0->Node38 [shape=plaintext, dir="back", style="solid"];
  Node0->Node39 [shape=plaintext, dir="back", style="solid"];
  Node0->Node40 [shape=plaintext, dir="back", style="solid"];
  Node0->Node41 [shape=plaintext, dir="back", style="solid"];
  Node0->Node42 [shape=plaintext, dir="back", style="solid"];
  Node0->Node43 [shape=plaintext, dir="back", style="solid"];
  Node0->Node44 [shape=plaintext, dir="back", style="solid"];
  Node0->Node45 [shape=plaintext, dir="back", style="solid"];
  Node0->Node46 [shape=plaintext, dir="back", style="solid"];
  Node0->Node47 [shape=plaintext, dir="back", style="solid"];
  Node0->Node48 [shape=plaintext, dir="back", style="solid"];
  Node0->Node49 [shape=plaintext, dir="back", style="solid"];
  Node0->Node50 [shape=plaintext, dir="back", style="solid"];
  Node0->Node51 [shape=plaintext, dir="back", style="solid"];
  Node0->Node52 [shape=plaintext, dir="back", style="solid"];
  Node0->Node53 [shape=plaintext, dir="back", style="solid"];
  Node0->Node54 [shape=plaintext, dir="back", style="solid"];
}
