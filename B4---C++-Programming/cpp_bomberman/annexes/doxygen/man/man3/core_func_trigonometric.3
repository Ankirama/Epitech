.TH "core_func_trigonometric" 3 "Sun Jun 7 2015" "Version 0.42" "cpp_bomberman" \" -*- nroff -*-
.ad l
.nh
.SH NAME
core_func_trigonometric \- Angle and Trigonometry Functions
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::radians\fP (genType const &degrees)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::degrees\fP (genType const &radians)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::sin\fP (genType const &angle)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::cos\fP (genType const &angle)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::tan\fP (genType const &angle)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::asin\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::acos\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::atan\fP (genType const &y, genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::atan\fP (genType const &y_over_x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::sinh\fP (genType const &angle)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::cosh\fP (genType const &angle)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::tanh\fP (genType const &angle)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::asinh\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::acosh\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::atanh\fP (genType const &x)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Function parameters specified as angle are assumed to be in units of radians\&. In no case will any of these functions result in a divide by zero error\&. If the divisor of a ratio is 0, then results will be undefined\&.
.PP
These all operate component-wise\&. The description is per component\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename genType > GLM_FUNC_DECL genType glm::acos (genType const & x)"
Arc cosine\&. Returns an angle whose sine is x\&. The range of values returned by this function is [0, PI]\&. Results are undefined if |x| > 1\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL acos man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::acosh (genType const & x)"
Arc hyperbolic cosine; returns the non-negative inverse of cosh\&. Results are undefined if x < 1\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL acosh man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::asin (genType const & x)"
Arc sine\&. Returns an angle whose sine is x\&. The range of values returned by this function is [-PI/2, PI/2]\&. Results are undefined if |x| > 1\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL asin man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::asinh (genType const & x)"
Arc hyperbolic sine; returns the inverse of sinh\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL asinh man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::atan (genType const & y, genType const & x)"
Arc tangent\&. Returns an angle whose tangent is y/x\&. The signs of x and y are used to determine what quadrant the angle is in\&. The range of values returned by this function is [-PI, PI]\&. Results are undefined if x and y are both 0\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL atan man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::atan (genType const & y_over_x)"
Arc tangent\&. Returns an angle whose tangent is y_over_x\&. The range of values returned by this function is [-PI/2, PI/2]\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL atan man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::atanh (genType const & x)"
Arc hyperbolic tangent; returns the inverse of tanh\&. Results are undefined if abs(x) >= 1\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL atanh man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::cos (genType const & angle)"
The standard trigonometric cosine function\&. The values returned by this function will range from [-1, 1]\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL cos man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::cosh (genType const & angle)"
Returns the hyperbolic cosine function, (exp(x) + exp(-x)) / 2
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL cosh man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::degrees (genType const & radians)"
Converts radians to degrees and returns the result\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL degrees man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::radians (genType const & degrees)"
Converts degrees to radians and returns the result\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL radians man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::sin (genType const & angle)"
The standard trigonometric sine function\&. The values returned by this function will range from [-1, 1]\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL sin man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::sinh (genType const & angle)"
Returns the hyperbolic sine function, (exp(x) - exp(-x)) / 2
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL sinh man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::tan (genType const & angle)"
The standard trigonometric tangent function\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL tan man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::tanh (genType const & angle)"
Returns the hyperbolic tangent function, sinh(angle) / cosh(angle)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIgenType\fP Floating-point scalar or vector types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCGLSL tanh man page\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 8\&.1 Angle and Trigonometry Functions\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for cpp_bomberman from the source code\&.
