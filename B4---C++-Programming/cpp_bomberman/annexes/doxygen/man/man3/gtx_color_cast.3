.TH "gtx_color_cast" 3 "Sun Jun 7 2015" "Version 0.42" "cpp_bomberman" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_color_cast \- GLM_GTX_color_cast
.PP
Conversion between two color types\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename valType > uint8 \fBglm::u8channel_cast\fP (valType a)"
.br
.ti -1c
.RI "template<typename valType > uint16 \fBglm::u16channel_cast\fP (valType a)"
.br
.ti -1c
.RI "template<typename T > uint32 \fBglm::u32_rgbx_cast\fP (const detail::tvec3< T > &c)"
.br
.RI "\fIConversion of a 3 components color into an 32bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint32 \fBglm::u32_xrgb_cast\fP (const detail::tvec3< T > &c)"
.br
.RI "\fIConversion of a 3 components color into an 32bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint32 \fBglm::u32_bgrx_cast\fP (const detail::tvec3< T > &c)"
.br
.RI "\fIConversion of a 3 components color into an 32bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint32 \fBglm::u32_xbgr_cast\fP (const detail::tvec3< T > &c)"
.br
.RI "\fIConversion of a 3 components color into an 32bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint32 \fBglm::u32_rgba_cast\fP (const detail::tvec4< T > &c)"
.br
.RI "\fIConversion of a 4 components color into an 32bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint32 \fBglm::u32_argb_cast\fP (const detail::tvec4< T > &c)"
.br
.RI "\fIConversion of a 4 components color into an 32bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint32 \fBglm::u32_bgra_cast\fP (const detail::tvec4< T > &c)"
.br
.RI "\fIConversion of a 4 components color into an 32bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint32 \fBglm::u32_abgr_cast\fP (const detail::tvec4< T > &c)"
.br
.RI "\fIConversion of a 4 components color into an 32bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint64 \fBglm::u64_rgbx_cast\fP (const detail::tvec3< T > &c)"
.br
.RI "\fIConversion of a 3 components color into an 64bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint64 \fBglm::u64_xrgb_cast\fP (const detail::tvec3< T > &c)"
.br
.RI "\fIConversion of a 3 components color into an 64bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint64 \fBglm::u64_bgrx_cast\fP (const detail::tvec3< T > &c)"
.br
.RI "\fIConversion of a 3 components color into an 64bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint64 \fBglm::u64_xbgr_cast\fP (const detail::tvec3< T > &c)"
.br
.RI "\fIConversion of a 3 components color into an 64bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint64 \fBglm::u64_rgba_cast\fP (const detail::tvec4< T > &c)"
.br
.RI "\fIConversion of a 4 components color into an 64bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint64 \fBglm::u64_argb_cast\fP (const detail::tvec4< T > &c)"
.br
.RI "\fIConversion of a 4 components color into an 64bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint64 \fBglm::u64_bgra_cast\fP (const detail::tvec4< T > &c)"
.br
.RI "\fIConversion of a 4 components color into an 64bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > uint64 \fBglm::u64_abgr_cast\fP (const detail::tvec4< T > &c)"
.br
.RI "\fIConversion of a 4 components color into an 64bit unsigned int value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f16 \fBglm::f16_channel_cast\fP (T a)"
.br
.RI "\fIConversion of a u8 or u16 value to a single channel floating value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f16vec3 \fBglm::f16_rgbx_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f16vec3 \fBglm::f16_xrgb_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f16vec3 \fBglm::f16_bgrx_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f16vec3 \fBglm::f16_xbgr_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f16vec4 \fBglm::f16_rgba_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f16vec4 \fBglm::f16_argb_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f16vec4 \fBglm::f16_bgra_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f16vec4 \fBglm::f16_abgr_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f32 \fBglm::f32_channel_cast\fP (T a)"
.br
.RI "\fIConversion of a u8 or u16 value to a single channel floating value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f32vec3 \fBglm::f32_rgbx_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f32vec3 \fBglm::f32_xrgb_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f32vec3 \fBglm::f32_bgrx_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f32vec3 \fBglm::f32_xbgr_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f32vec4 \fBglm::f32_rgba_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f32vec4 \fBglm::f32_argb_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f32vec4 \fBglm::f32_bgra_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f32vec4 \fBglm::f32_abgr_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f64 \fBglm::f64_channel_cast\fP (T a)"
.br
.RI "\fIConversion of a u8 or u16 value to a single channel floating value\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f64vec3 \fBglm::f64_rgbx_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f64vec3 \fBglm::f64_xrgb_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f64vec3 \fBglm::f64_bgrx_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f64vec3 \fBglm::f64_xbgr_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 3 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f64vec4 \fBglm::f64_rgba_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f64vec4 \fBglm::f64_argb_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f64vec4 \fBglm::f64_bgra_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.ti -1c
.RI "template<typename T > f64vec4 \fBglm::f64_abgr_cast\fP (T c)"
.br
.RI "\fIConversion of a u32 or u64 color into 4 components floating color\&. (From GLM_GTX_color_cast extension) \fP"
.in -1c
.SH "Detailed Description"
.PP 
Conversion between two color types\&. 

<\fBglm/gtx/color_cast\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename valType > uint16 glm::u16channel_cast (valType a)"
Conversion of a floating value into a 16bit unsigned int value\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_color_cast\fP 
.RE
.PP

.SS "template<typename valType > uint8 glm::u8channel_cast (valType a)"
Conversion of a floating value into a 8bit unsigned int value\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_color_cast\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for cpp_bomberman from the source code\&.
