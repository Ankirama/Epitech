.TH "gtx_optimum_pow" 3 "Sun Jun 7 2015" "Version 0.42" "cpp_bomberman" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_optimum_pow \- GLM_GTX_optimum_pow
.PP
Integer exponentiation of power functions\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename genType > genType \fBglm::gtx::pow2\fP (const genType &x)"
.br
.ti -1c
.RI "template<typename genType > genType \fBglm::gtx::pow3\fP (const genType &x)"
.br
.ti -1c
.RI "template<typename genType > genType \fBglm::gtx::pow4\fP (const genType &x)"
.br
.ti -1c
.RI "bool \fBglm::gtx::powOfTwo\fP (\fBint\fP num)"
.br
.ti -1c
.RI "detail::tvec2< bool > \fBglm::gtx::powOfTwo\fP (const detail::tvec2< \fBint\fP > &x)"
.br
.ti -1c
.RI "detail::tvec3< bool > \fBglm::gtx::powOfTwo\fP (const detail::tvec3< \fBint\fP > &x)"
.br
.ti -1c
.RI "detail::tvec4< bool > \fBglm::gtx::powOfTwo\fP (const detail::tvec4< \fBint\fP > &x)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Integer exponentiation of power functions\&. 

<\fBglm/gtx/optimum_pow\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename genType > genType glm::gtx::pow2 (const genType & x)"
Returns x raised to the power of 2\&. From GLM_GTX_optimum_pow extension\&. 
.SS "template<typename genType > genType glm::gtx::pow3 (const genType & x)"
Returns x raised to the power of 3\&. From GLM_GTX_optimum_pow extension\&. 
.SS "template<typename genType > genType glm::gtx::pow4 (const genType & x)"
Returns x raised to the power of 4\&. From GLM_GTX_optimum_pow extension\&. 
.SS "bool glm::gtx::powOfTwo (\fBint\fP num)"
Checks if the parameter is a power of 2 number\&. From GLM_GTX_optimum_pow extension\&. 
.SS "detail::tvec2<bool> glm::gtx::powOfTwo (const \fBdetail::tvec2\fP< \fBint\fP > & x)"
Checks to determine if the parameter component are power of 2 numbers\&. From GLM_GTX_optimum_pow extension\&. 
.SS "detail::tvec3<bool> glm::gtx::powOfTwo (const \fBdetail::tvec3\fP< \fBint\fP > & x)"
Checks to determine if the parameter component are power of 2 numbers\&. From GLM_GTX_optimum_pow extension\&. 
.SS "detail::tvec4<bool> glm::gtx::powOfTwo (const \fBdetail::tvec4\fP< \fBint\fP > & x)"
Checks to determine if the parameter component are power of 2 numbers\&. From GLM_GTX_optimum_pow extension\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for cpp_bomberman from the source code\&.
