.TH "gtx_vector_query" 3 "Sun Jun 7 2015" "Version 0.42" "cpp_bomberman" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_vector_query \- GLM_GTX_vector_query
.PP
Query informations of vector types\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename genType > bool \fBglm::areCollinear\fP (genType const &v0, genType const &v1, typename genType::value_type const &epsilon)"
.br
.ti -1c
.RI "template<typename genType > bool \fBglm::areOrthogonal\fP (genType const &v0, genType const &v1, typename genType::value_type const &epsilon)"
.br
.ti -1c
.RI "template<typename genType , template< typename > class vecType> bool \fBglm::isNormalized\fP (vecType< genType > const &v, genType const &epsilon)"
.br
.ti -1c
.RI "template<typename valType > bool \fBglm::isNull\fP (detail::tvec2< valType > const &v, valType const &epsilon)"
.br
.ti -1c
.RI "template<typename valType > bool \fBglm::isNull\fP (detail::tvec3< valType > const &v, valType const &epsilon)"
.br
.ti -1c
.RI "template<typename valType > bool \fBglm::isNull\fP (detail::tvec4< valType > const &v, valType const &epsilon)"
.br
.ti -1c
.RI "template<typename genType > bool \fBglm::areOrthonormal\fP (genType const &v0, genType const &v1, typename genType::value_type const &epsilon)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Query informations of vector types\&. 

<\fBglm/gtx/vector_query\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename genType > bool glm::areCollinear (genType const & v0, genType const & v1, typename genType::value_type const & epsilon)"
Check whether two vectors are collinears\&. From GLM_GTX_vector_query extensions\&. 
.SS "template<typename genType > bool glm::areOrthogonal (genType const & v0, genType const & v1, typename genType::value_type const & epsilon)"
Check whether two vectors are orthogonals\&. From GLM_GTX_vector_query extensions\&. 
.SS "template<typename genType > bool glm::areOrthonormal (genType const & v0, genType const & v1, typename genType::value_type const & epsilon)"
Check whether two vectors are orthonormal\&. From GLM_GTX_vector_query extensions\&. 
.SS "template<typename genType , template< typename > class vecType> bool glm::isNormalized (vecType< genType > const & v, genType const & epsilon)"
Check whether a vector is normalized\&. From GLM_GTX_vector_query extensions\&. 
.SS "template<typename valType > bool glm::isNull (\fBdetail::tvec2\fP< valType > const & v, valType const & epsilon)"
Check whether a vector is null\&. From GLM_GTX_vector_query extensions\&. 
.SS "template<typename valType > bool glm::isNull (\fBdetail::tvec3\fP< valType > const & v, valType const & epsilon)"
Check whether a vector is null\&. From GLM_GTX_vector_query extensions\&. 
.SS "template<typename valType > bool glm::isNull (\fBdetail::tvec4\fP< valType > const & v, valType const & epsilon)"
Check whether a vector is null\&. From GLM_GTX_vector_query extensions\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for cpp_bomberman from the source code\&.
