.TH "lib/gdl/includes/glm/gtc/ulp.inl" 3 "Sun Jun 7 2015" "Version 0.42" "cpp_bomberman" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/gdl/includes/glm/gtc/ulp.inl \- 
.SH SYNOPSIS
.br
.PP
\fC#include <cmath>\fP
.br
\fC#include <cfloat>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "union \fBieee_float_shape_type\fP"
.br
.ti -1c
.RI "union \fBieee_double_shape_type\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGLM_EXTRACT_WORDS\fP(ix0,  ix1,  d)"
.br
.ti -1c
.RI "#define \fBGLM_GET_FLOAT_WORD\fP(i,  d)"
.br
.ti -1c
.RI "#define \fBGLM_SET_FLOAT_WORD\fP(d,  i)"
.br
.ti -1c
.RI "#define \fBGLM_INSERT_WORDS\fP(d,  ix0,  ix1)"
.br
.ti -1c
.RI "#define \fBGLM_NEXT_AFTER_FLT\fP(x,  toward)   nextafterf((x), (toward))"
.br
.ti -1c
.RI "#define \fBGLM_NEXT_AFTER_DBL\fP(x,  toward)   nextafter((x), (toward))"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBglm::detail::nextafterf\fP (float x, float y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER double \fBglm::detail::nextafter\fP (double x, double y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBglm::next_float\fP (float const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER double \fBglm::next_float\fP (double const &x)"
.br
.ti -1c
.RI "template<typename T , template< typename > class vecType> GLM_FUNC_QUALIFIER vecType< T > \fBglm::next_float\fP (vecType< T > const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBglm::prev_float\fP (float const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER double \fBglm::prev_float\fP (double const &x)"
.br
.ti -1c
.RI "template<typename T , template< typename > class vecType> GLM_FUNC_QUALIFIER vecType< T > \fBglm::prev_float\fP (vecType< T > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBglm::next_float\fP (T const &x, uint const &ulps)"
.br
.ti -1c
.RI "template<typename T , template< typename > class vecType> GLM_FUNC_QUALIFIER vecType< T > \fBglm::next_float\fP (vecType< T > const &x, vecType< uint > const &ulps)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBglm::prev_float\fP (T const &x, uint const &ulps)"
.br
.ti -1c
.RI "template<typename T , template< typename > class vecType> GLM_FUNC_QUALIFIER vecType< T > \fBglm::prev_float\fP (vecType< T > const &x, vecType< uint > const &ulps)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER uint \fBglm::float_distance\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , template< typename > class vecType> GLM_FUNC_QUALIFIER vecType< uint > \fBglm::float_distance\fP (vecType< T > const &x, vecType< T > const &y)"
.br
.in -1c
.SH "Detailed Description"
.PP 
OpenGL Mathematics (glm\&.g-truc\&.net)
.PP
Copyright (c) 2005 - 2013 G-Truc Creation (www\&.g-truc\&.net) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software\&.
.PP
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\&. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\&.
.PP
\fBGLM_GTC_ulp\fP
.PP
\fBDate:\fP
.RS 4
2011-03-07 / 2012-04-07 
.RE
.PP
\fBAuthor:\fP
.RS 4
Christophe Riccio
.RE
.PP
Copyright (C) 1993 by Sun Microsystems, Inc\&. All rights reserved\&.
.PP
Developed at SunPro, a Sun Microsystems, Inc\&. business\&. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved\&. 
.SH "Macro Definition Documentation"
.PP 
.SS "#define GLM_EXTRACT_WORDS(ix0, ix1, d)"
\fBValue:\fP
.PP
.nf
do {                                                            \
      ieee_double_shape_type ew_u;                                  \
      ew_u\&.value = (d);                                             \
      (ix0) = ew_u\&.parts\&.msw;                                       \
      (ix1) = ew_u\&.parts\&.lsw;                                       \
    } while (0)
.fi
.SS "#define GLM_GET_FLOAT_WORD(i, d)"
\fBValue:\fP
.PP
.nf
do {                                                            \
      ieee_float_shape_type gf_u;                                   \
      gf_u\&.value = (d);                                             \
      (i) = gf_u\&.word;                                              \
    } while (0)
.fi
.SS "#define GLM_INSERT_WORDS(d, ix0, ix1)"
\fBValue:\fP
.PP
.nf
do {                                                            \
      ieee_double_shape_type iw_u;                                  \
      iw_u\&.parts\&.msw = (ix0);                                       \
      iw_u\&.parts\&.lsw = (ix1);                                       \
      (d) = iw_u\&.value;                                             \
    } while (0)
.fi
.SS "#define GLM_SET_FLOAT_WORD(d, i)"
\fBValue:\fP
.PP
.nf
do {                                                            \
      ieee_float_shape_type sf_u;                                   \
      sf_u\&.word = (i);                                              \
      (d) = sf_u\&.value;                                             \
    } while (0)
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for cpp_bomberman from the source code\&.
